{
  "parser": "@typescript-eslint/parser", // Specifies the ESLint parser
  "plugins": [
    // https://github.com/yannickcr/eslint-plugin-react
    "react",
    // https://github.com/benmosher/eslint-plugin-import
    "import",
    // https://www.npmjs.com/package/eslint-plugin-jest
    "jest"
  ],
  "extends": [
    "plugin:react/recommended", // Uses the recommended rules from @eslint-plugin-react
    "plugin:@typescript-eslint/recommended", // Uses the recommended rules from @typescript-eslint/eslint-plugin
    "plugin:import/typescript",
    "plugin:prettier/recommended"
  ],
  "env": {
    // browser global variables
    "browser": true,
    // enable all ECMAScript 6 features except for modules
    "es6": true,
    "commonjs": true,
    "jest": true
  },
  "parserOptions": {
    "ecmaVersion": 2018, // Allows for the parsing of modern ECMAScript features
    "sourceType": "module", // Allows for the use of imports
    "ecmaFeatures": {
        "modules": true,
        "jsx": true // Allows for the parsing of JSX
    }
  },
  "rules": {
        // Limit Cyclomatic Complexity
        // http://eslint.org/docs/rules/complexity
        "complexity": [0, 2],
        // Require Consistent Returns
        // http://eslint.org/docs/rules/consistent-return
        "consistent-return": 2,
        // Require Following Curly Brace Conventions
        // http://eslint.org/docs/rules/curly
        "curly": [0, "all"],
        // Require Default Case in Switch Statements
        // http://eslint.org/docs/rules/default-case
        "default-case": 0, // TODO
        // Require Dot Notation
        // http://eslint.org/docs/rules/dot-notation
        "dot-notation": [2, {
            "allowKeywords": true,
        }],
        // Enforce newline before and after dot
        // http://eslint.org/docs/rules/dot-lotation
        "dot-location": [0, "property"],
        // Require === and !==
        // http://eslint.org/docs/rules/eqeqeq
        "eqeqeq": 2,
        // Make sure for-in loops have an if statement
        // http://eslint.org/docs/rules/guard-for-in
        "guard-for-in": 0, // TODO
        // Disallow the use of alert, confirm, and prompt
        // http://eslint.org/docs/rules/no-alert
        "no-alert": 2,
        // Disallow use of arguments.caller or arguments.callee
        // http://eslint.org/docs/rules/no-caller
        "no-caller": 2,
        // Disallow return in else
        // http://eslint.org/docs/rules/no-else-return
        "no-else-return": 0,
        // Disallow empty destructuring patterns
        // http://eslint.org/docs/rules/no-empty-pattern
        "no-empty-pattern": 2,
        // Disallow Null Comparisons
        // http://eslint.org/docs/rules/no-eq-null
        "no-eq-null": 2,
        // Disallow use of eval()
        // http://eslint.org/docs/rules/no-eval
        "no-eval": 2,
        // Disallow Extending of Native Objects
        // http://eslint.org/docs/rules/no-extend-native
        "no-extend-native": 2,
        // Disallow unnecessary function binding
        // http://eslint.org/docs/rules/no-extra-bind
        "no-extra-bind": 2,
        // Disallow Case Statement Fallthrough
        // http://eslint.org/docs/rules/no-fallthrough
        "no-fallthrough": 2,
        // Disallow Floating Decimals
        // http://eslint.org/docs/rules/no-floating-decimal
        "no-floating-decimal": 2,
        // Disallow the type conversion with shorter notations
        // http://eslint.org/docs/rules/no-implicit-coercion
        "no-implicit-coercion": 0,
        // Disallow Implied eval() via setTimeout(), setInterval() or execScript()
        // http://eslint.org/docs/rules/no-implied-eval
        "no-implied-eval": 2,
        // Disallow this keywords outside of classes or class-like objects
        // http://eslint.org/docs/rules/no-invalid-this
        "no-invalid-this": 0,
        // Disallow Unnecessary Nested Blocks
        // http://eslint.org/docs/rules/no-lone-blocks
        "no-lone-blocks": 2,
        // Disallow Function Creation in Loops
        // http://eslint.org/docs/rules/no-loop-func
        "no-loop-func": 2,
        // Disallow multiple spaces
        // http://eslint.org/docs/rules/no-multi-spaces
        "no-multi-spaces": 0,
        // Disallow Multiline Strings
        // http://eslint.org/docs/rules/no-multi-str
        "no-multi-str": 2,
        // Disallow Reassignment of Native Objects
        // http://eslint.org/docs/rules/no-native-reassign
        "no-native-reassign": 2,
        // Disallow Function Constructor
        // http://eslint.org/docs/rules/no-new-func
        "no-new-func": 2,
        // Disallow new For Side Effects
        // http://eslint.org/docs/rules/no-new
        "no-new": 2, // TODO
        // Disallow Primitive Wrapper Instances
        // http://eslint.org/docs/rules/no-new-wrappers
        "no-new-wrappers": 2,
        // Disallow Octal Escapes
        // http://eslint.org/docs/rules/no-octal-escape
        "no-octal-escape": 2,
        // Disallow Octal Literals
        // http://eslint.org/docs/rules/no-octal
        "no-octal": 2,
        // Disallow Reassignment of Function Parameters
        // http://eslint.org/docs/rules/no-param-reassign
        "no-param-reassign": [0, {
            "props": true,
        }],
        // Disallow Use of __proto__
        // http://eslint.org/docs/rules/no-proto
        "no-proto": 2,
        // Disallow Redeclaring Variables
        // http://eslint.org/docs/rules/no-redeclare
        "no-redeclare": 2,
        // Disallow Assignment in Return Statement
        // http://eslint.org/docs/rules/no-return-assign
        "no-return-assign": 2,
        // Disallow Script URLs
        // http://eslint.org/docs/rules/no-script-url
        "no-script-url": 2,
        // Disallow Self Compare
        // http://eslint.org/docs/rules/no-self-compare
        "no-self-compare": 2,
        // Disallow Use of the Comma Operator
        // http://eslint.org/docs/rules/no-sequences
        "no-sequences": 2,
        // Disallow Unused Expressions
        // http://eslint.org/docs/rules/no-unused-expressions
        "no-unused-expressions": 2,
        // Disallow unnecessary .call() and .apply()
        // http://eslint.org/docs/rules/no-useless-call
        "no-useless-call": 0, // TODO
        // Disallow unnecessary concatenation of strings
        // http://eslint.org/docs/rules/no-useless-concat
        "no-useless-concat": 2,
        // Disallow with Statements
        // http://eslint.org/docs/rules/no-with
        "no-with": 2,
        // Require Radix Parameter of parseInt()
        // http://eslint.org/docs/rules/radix
        "radix": 2,
        // Disallow Yoda Conditions
        // http://eslint.org/docs/rules/yoda
        "yoda": [2, "never"],

        // Enforce Dangling Commas
        // http://eslint.org/docs/rules/comma-dangle
        "comma-dangle": [0, "always-multiline"],
        // Disallow Assignment in Conditional Statements
        // http://eslint.org/docs/rules/no-cond-assign
        "no-cond-assign": [2, "always"],
        // Disallow Use of console
        // http://eslint.org/docs/rules/no-console
        "no-console": 0,
        // Disallow use of constant expressions in conditions
        // http://eslint.org/docs/rules/no-control-regex
        "no-constant-condition": 0,
        // Disallow Controls Characters in Regular Expressions
        // http://eslint.org/docs/rules/no-control-regex
        "no-control-regex": 2,
        // Disallow debugger
        // http://eslint.org/docs/rules/no-debugger
        "no-debugger": 1,
        // No duplicate arguments
        // http://eslint.org/docs/rules/no-dupe-args
        "no-dupe-args": 2,
        // Disallow Duplicate Keys
        // http://eslint.org/docs/rules/no-dupe-keys
        "no-dupe-keys": 2,
        // Disallow a duplicate case label
        // http://eslint.org/docs/rules/no-duplicate-case
        "no-duplicate-case": 2,
        // Disallow Empty Character Classes
        // http://eslint.org/docs/rules/no-empty-character-class
        "no-empty-character-class": 2,
        // Disallow Empty Block Statements
        // http://eslint.org/docs/rules/no-empty
        "no-empty": 2,
        // Disallow Assignment of the Exception Parameter
        // http://eslint.org/docs/rules/no-ex-assign
        "no-ex-assign": 2,
        // Disallow Extra Boolean Casts
        // http://eslint.org/docs/rules/no-extra-boolean-cast
        "no-extra-boolean-cast": 2,
        // Disallow Extra Semicolons
        // http://eslint.org/docs/rules/no-extra-semi
        "no-extra-semi": 0,
        // Disallow Function Assignment
        // http://eslint.org/docs/rules/no-func-assign
        "no-func-assign": 2,
        // Disallow Declarations in Program or Function Body
        // http://eslint.org/docs/rules/no-inner-declarations
        "no-inner-declarations": 2,
        // Disallow Invalid Regular Expressions
        // http://eslint.org/docs/rules/no-invalid-regexp
        "no-invalid-regexp": 2,
        // Disallow irregular whitespace
        // http://eslint.org/docs/rules/no-irregular-whitespace
        "no-irregular-whitespace": 2,
        // Disallow negated left operand of in operator
        // http://eslint.org/docs/rules/no-negated-in-lhs
        "no-negated-in-lhs": 2,
        // Disallow Global Object Function Calls
        // http://eslint.org/docs/rules/no-obj-calls
        "no-obj-calls": 2,
        // Disallow Multiple Spaces in Regular Expressions
        // http://eslint.org/docs/rules/no-regex-spaces
        "no-regex-spaces": 2,
        // Disallow Sparse Arrays
        // http://eslint.org/docs/rules/no-sparse-arrays
        "no-sparse-arrays": 2,
        // Disallow Unreachable Code
        // http://eslint.org/docs/rules/no-unreachable
        "no-unreachable": 2,
        // Require isNaN()
        // http://eslint.org/docs/rules/use-isnan
        "use-isnan": 2,
        // Ensures that the results of typeof are compared against a valid string
        // http://eslint.org/docs/rules/valid-typeof
        "valid-typeof": 2,
        // Avoid unexpected multiline expressions
        // http://eslint.org/docs/rules/block-scoped-var
        "no-unexpected-multiline": 0,

        // es2015 -----------------------------------------------------
        // Require parens in arrow function arguments
        // http://eslint.org/docs/rules/arrow-parens
        "arrow-parens": [0, "always"],
        // Require space before/after arrow function's arrow
        // http://eslint.org/docs/rules/arrow-spacing
        "arrow-spacing": [0, {
            "before": true,
            "after": true,
        }],
        // Verify calls of super() in constructors
        // http://eslint.org/docs/rules/constructor-super
        "constructor-super": 2,
        // Enforce spacing around the * in generator functions
        // http://eslint.org/docs/rules/generator-star-spacing
        "generator-star-spacing": [0, {
            "before": false,
            "after": true,
        }],
        // Disallow duplicate name in class members
        // http://eslint.org/docs/rules/no-dupe-class-members
        "no-dupe-class-members": 2,
        // Disallow use of this/super before calling super() in constructors
        // http://eslint.org/docs/rules/no-this-before-super
        "no-this-before-super": 2,
        // Require let or const instead of var
        // http://eslint.org/docs/rules/no-var
        "no-var": 2,
        // Suggest using arrow functions as callbacks
        // http://eslint.org/docs/rules/prefer-arrow-callback
        "prefer-arrow-callback": 2,
        // Suggest using const, if a variable is never modified
        // http://eslint.org/docs/rules/prefer-const
        "prefer-const": 2,
        // Suggest using the spread operator instead of .apply()
        // http://eslint.org/docs/rules/prefer-spread
        "prefer-spread": 2,
        // Suggest using template literals instead of string concatenation
        // http://eslint.org/docs/rules/prefer-template
        "prefer-template": 0,

        // legacy ------------------------------------------------------
        // Limit Maximum Depth Blocks can be Nested
        // http://eslint.org/docs/rules/max-depth
        "max-depth": [2, 4],
        // Limit Maximum Length of Line
        // http://eslint.org/docs/rules/max-len
        "max-len": [0, 80, 2],
        // Limit Maximum Number of Parameters
        // http://eslint.org/docs/rules/max-params
        "max-params": [0, 4], // TODO
        // Limit Maximum Number of Statements
        // http://eslint.org/docs/rules/max-statements
        "max-statements": [2, 40],

        // Enforce JSX Quote Style
        // http://eslint.org/docs/rules/jsx-quotes
        "jsx-quotes": [0, "prefer-double"],
        // Prevent missing displayName in a React component definition
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/display-name.md
        "react/display-name": [2, {
            "ignoreTranspilerName": false,
        }], // TODO
        // Enforce boolean attributes notation in JSX
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-boolean-value.md
        "react/jsx-boolean-value": [2, "never"],
        // Validate closing bracket location in JSX
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-closing-bracket-location.md
        "react/jsx-closing-bracket-location": [0, {
            "nonEmpty": "after-props",
            "selfClosing": "after-props",
        }],
        // Disallow spaces inside of curly braces in JSX attributes
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-curly-spacing.md
        "react/jsx-curly-spacing": [0, "never"],
        // Validate props indentation in JSX
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-indent-props.md
        "react/jsx-indent-props": [0, 2],
        // Prevent duplicate properties in JSX
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-duplicate-props.md
        "react/jsx-no-duplicate-props": 2,
        // Disallow undeclared variables in JSX
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-undef.md
        "react/jsx-no-undef": 2,
        // Prevent React to be incorrectly marked as unused
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-uses-react.md
        "react/jsx-uses-react": 2,
        // Prevent variables used in JSX to be incorrectly marked as unused
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-uses-vars.md
        "react/jsx-uses-vars": 2,
        // Prevent usage of dangerous JSX properties
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-danger.md
        "react/no-danger": 2,
        // Prevent usage of setState in componentDidMount
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-did-mount-set-state.md
        "react/no-did-mount-set-state": [2],
        // Prevent usage of setState in componentDidUpdate
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-did-update-set-state.md
        "react/no-did-update-set-state": 2,
        // Prevent direct mutation of this.state
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-direct-mutation-state.md
        "react/no-direct-mutation-state": 2,
        // Prevent multiple component definition per file
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-multi-comp.md
        "react/no-multi-comp": 0,
        // Prevent usage of unknown DOM property
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-unknown-property.md
        "react/no-unknown-property": 2,
        // Prefer ES6 classes over React.createClass
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/prefer-es6-class.md
        "react/prefer-es6-class": 0,
        // Prevent missing props validation in a React component definition
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/prop-types.md
        "react/prop-types": [0, {
            "ignore": ["className"],
        }],
        // Prevent missing React when using JSX
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/react-in-jsx-scope.md
        "react/react-in-jsx-scope": 2,
        // Prevent extra closing tags for components without children
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/self-closing-comp.md
        "react/self-closing-comp": 0,
        // Enforce component methods order
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/sort-comp.md
        "react/sort-comp": [0, {
            "order": [
                "displayName",
                "propTypes",
                "contextTypes",
                "childContextTypes",
                "mixins",
                "statics",
                "defaultProps",
                "constructor",
                "getDefaultProps",
                "getInitialState",
                "getChildContext",
                "componentWillMount",
                "componentDidMount",
                "componentWillReceiveProps",
                "shouldComponentUpdate",
                "componentWillUpdate",
                "componentDidUpdate",
                "componentWillUnmount",
                "everything-else",
                "/^on.+$/",
                "/^get.+$/",
                "/^render.+$/",
                "render",
            ],
        }], // TODO
        // Prevent missing parentheses around multilines JSX
        // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/wrap-multilines.md
        "react/jsx-wrap-multilines": 0,


        // Disallow 'use strict' statement
        // babel auto-inserts 'use strict';
        // http://eslint.org/docs/rules/strict
        "strict": [2, "never"],

        // Style -----------------------------------------------------------
        // Disallow spaces inside of brackets
        // http://eslint.org/docs/rules/array-bracket-spacing
        "array-bracket-spacing": [0, "never"],
        // Enforce spaces inside of single line blocks
        // http://eslint.org/docs/rules/block-spacing
        "block-spacing": [0, "always"],
        // Enforce Brace Style
        // http://eslint.org/docs/rules/brace-style
        "brace-style": [0, "1tbs", {
            "allowSingleLine": false,
        }],
        // Require camelCase, except for property names
        // http://eslint.org/docs/rules/camelcase
        "camelcase": [2, {
            "properties": "never",
            "allow": ["translations_.*"],
        }],
        // Enforce spacing around commas
        // http://eslint.org/docs/rules/comma-spacing
        "comma-spacing": [0, {
            "before": false,
            "after": true,
        }],
        // Enforce Comma Style
        // http://eslint.org/docs/rules/comma-style
        "comma-style": [0, "last"],
        // Disallow spaces inside of computed properties
        // http://eslint.org/docs/rules/computed-property-spacing
        "computed-property-spacing": [0, "never"],
        // Require Consistent this9
        // http://eslint.org/docs/rules/consistent-this
        "consistent-this": [0, "self"], // TODO
        // Require files to end with single newline
        // http://eslint.org/docs/rules/eol-last
        "eol-last": 0,
        // Require Names for Function Expressions
        // http://eslint.org/docs/rules/func-names
        "func-names": 0,
        // Enforce minimum and maximum length for identifiers
        // http://eslint.org/docs/rules/id-length
        "id-length": [0, {
            "min": 2,
            "exceptions": ["i"],
        }],
        // Enforce Indentation
        // http://eslint.org/docs/rules/indent
        "indent": [0, 4, {
            "SwitchCase": 1,
        }],
        // Enforce Property Spacing
        // http://eslint.org/docs/rules/key-spacing
        "key-spacing": [0, {
            "beforeColon": false,
            "afterColon": true,
        }],
        // Enforce Maximum Depth of Nested Callbacks
        // http://eslint.org/docs/rules/max-nested-callbacks
        "max-nested-callbacks": [2, 4],
        // Require Constructors to Use Initial Caps
        // http://eslint.org/docs/rules/new-cap
        "new-cap": [2, {
            "newIsCap": true,
            "capIsNew": false,
        }],
        // Require Parens for Constructors
        // http://eslint.org/docs/rules/new-parens
        "new-parens": 0,
        // Disallow if as the Only Statement in an else Block
        // http://eslint.org/docs/rules/no-lonely-if
        "no-lonely-if": 0,
        // Disallow mixed spaces and tabs for indentation
        // http://eslint.org/docs/rules/no-mixed-spaces-and-tabs
        "no-mixed-spaces-and-tabs": 0,
        // Disallow multiple blank lines
        // http://eslint.org/docs/rules/no-multiple-empty-lines
        "no-multiple-empty-lines": [2, {
            "max": 2,
        }],
        // Disallow Nested Ternaries
        // http://eslint.org/docs/rules/no-nested-ternary
        "no-nested-ternary": 2,
        // Disallow the use of the Object constructor
        // http://eslint.org/docs/rules/no-new-object
        "no-new-object": 2,
        // Disallow Spaces in Function Calls
        // http://eslint.org/docs/rules/no-spaced-func
        "no-spaced-func": 0,
        // Disallow trailing spaces at the end of lines
        // http://eslint.org/docs/rules/no-trailing-spaces
        "no-trailing-spaces": 0,
        // Disallow conditional expressions that can be expressed with simpler constructs
        // http://eslint.org/docs/rules/no-unneeded-ternary
        "no-unneeded-ternary": 2,
        // Disallow or enforce spaces inside of curly braces in objects
        // http://eslint.org/docs/rules/object-curly-spacing
        "object-curly-spacing": [0, "always"],
        // Enforce Operator Assignment Shorthand
        // http://eslint.org/docs/rules/operator-assignment
        "operator-assignment": [2, "always"],
        // Enforce Operator Linebreak
        // http://eslint.org/docs/rules/operator-linebreak
        "operator-linebreak": [0, "after"],
        // Enforce padding within blocks
        // http://eslint.org/docs/rules/padded-blocks
        "padded-blocks": [2, "never"],
        // Enforce Quoting Style for Property Names
        // http://eslint.org/docs/rules/quote-props
        "quote-props": [0, "as-needed"],
        // Enforce Quote Style
        // http://eslint.org/docs/rules/quotes
        "quotes": [0, "double"],
        // Enforce spacing before and after semicolons
        // http://eslint.org/docs/rules/semi-spacing
        "semi-spacing": [0, {
            "before": false,
            "after": true,
        }],
        // Enforce Semicolons
        // http://eslint.org/docs/rules/semi
        "semi": [0, "always"],
        // Require Space Before Blocks
        // http://eslint.org/docs/rules/space-before-blocks
        "space-before-blocks": [0, "always"],
        // Disallow a space before function parenthesis
        // http://eslint.org/docs/rules/space-before-function-paren
        "space-before-function-paren": [0, {"anonymous": "always", "named": "never"}],
        // Disallow spaces inside of parentheses
        // http://eslint.org/docs/rules/space-in-parens
        "space-in-parens": [0, "never"],
        // Require Spaces Around Infix Operators
        // http://eslint.org/docs/rules/space-infix-ops
        "space-infix-ops": 0,
        // Require or disallow spaces before/after unary operators
        // http://eslint.org/docs/rules/space-unary-ops
        "space-unary-ops": [0, {
            "words": true,
            "nonwords": false,
        }],

        "spaced-comment": [0, "always"], // TODO: Fix and enable
        "keyword-spacing": 0,

        // Variables -------------------------------------------
        // Disallow Variables Deletion
        // http://eslint.org/docs/rules/no-delete-var
        "no-delete-var": 2,
        // Disallow Shadowing of Restricted Names
        // http://eslint.org/docs/rules/no-shadow-restricted-names
        "no-shadow-restricted-names": 2,
        // http://eslint.org/docs/rules/no-shadow
        //"no-shadow": 2,
        // Disallow Initializing to undefined
        // http://eslint.org/docs/rules/no-undef-init
        "no-undef-init": 2,
        // Disallow Undeclared Variables
        // http://eslint.org/docs/rules/no-undef
        // TypeScript will take care of this.
        "no-undef": 0,
        // Disallow Unused Variables
        // http://eslint.org/docs/rules/no-unused-vars
        // replaced by @typescript-eslint/no-unused-vars
        "no-unused-vars": 0,

        // Lodash ----------------------------------------------
        "lodash/prefer-lodash-method": 0,
        "lodash/prefer-lodash-chain": 0,
        "lodash/prefer-noop": 0,
        "lodash/prefer-constant": 0,
        "lodash/prefer-matches": 0,
        "lodash/path-style": [0, "array"],
        "lodash/chain-style": 0,
        "lodash/chaining": 0,
        // TODO(FD): Not sure about the following -- depends on whether we want to use flow more
        "lodash/prefer-lodash-typecheck": 0,
        "lodash/prefer-get": 0,
        "lodash/prefer-is-nil": 0,
        "lodash/prop-shorthand": 0,
        "lodash/matches-prop-shorthand": 0,
        "lodash/matches-shorthand": 0,
        "lodash/prefer-invoke-map": 0,
        // _includes does not accept arrays, so it cannot be used in all cases:
        "lodash/prefer-includes": 0,
        "lodash/import-scope": 0,
        "lodash/prefer-immutable-method": 0,

        // Imports ---------------------------------------------
        // Don't allow importing dev-dependencies
        "import/no-extraneous-dependencies": 2,
        // Style stuff
        "import/first": 0,
        "import/order": 0, // TODO
        "import/extensions": [2, "never", {"json": "always"}],
        "import/default": 2,
        "import/no-commonjs": 2,
        "import/no-cycle": 0, // TODO

        // Jest ------------------------------------------------
        "jest/no-disabled-tests": 0,
        "jest/no-focused-tests": 2,
        "jest/no-identical-title": 2,

        // Typescript ------------------------------------------
        "@typescript-eslint/no-explicit-any": 0,
        "@typescript-eslint/no-empty-function": 0,
        "@typescript-eslint/no-inferrable-types": 0,
        "@typescript-eslint/ban-ts-ignore": 0,
        "@typescript-eslint/no-use-before-define": 0,
        "@typescript-eslint/no-namespace": 0, // TODO
        "@typescript-eslint/no-non-null-assertion": 0, // TODO
        "@typescript-eslint/explicit-function-return-type": 0, // TODO
        "@typescript-eslint/camelcase": 0, // TODO
        "@typescript-eslint/no-this-alias": 0, // TODO
        "@typescript-eslint/ban-types": 0, // TODO
        "@typescript-eslint/no-unused-vars": [2, {
            // checks only that locally-declared variables are used but will allow
            // global variables to be unused
            "vars": "local",
            // only the last argument must be used
            "args": "after-used"
        }]
    
  },
  "settings": {
    "react": {
      "version": "detect" // Tells eslint-plugin-react to automatically detect the version of React to use
    }
  }
}
